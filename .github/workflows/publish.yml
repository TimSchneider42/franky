name: Publish

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    strategy:
      matrix:
        libfranka-version: [0.7.1, 0.8.0, 0.9.2, 0.10.0, 0.11.0, 0.12.1, 0.13.3, 0.14.2, 0.15.3, 0.16.0]
        manylinux-version: [manylinux_2_28_x86_64, manylinux_2_34_x86_64]
    uses: ./.github/workflows/build_wheels.yml
    with:
      libfranka-version: ${{ matrix.libfranka-version }}
      manylinux-version: ${{ matrix.manylinux-version }}

  publish:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
      - name: Prepare
        run: |
          mkdir -p artifacts
          mkdir -p output

      - name: Get wheels
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Merge wheels
        run: |
          # find unique versions
          versions=$(
            cd artifacts &&
            ls -1d wheels___*___* 2>/dev/null \
              | sed -E 's/wheels___([^_]+)___.*/\1/' \
              | sort -u
          )

          if [[ -z "$versions" ]]; then
            echo "No wheel archives found, skipping."
            exit 0
          fi

          for version in $versions; do
            out="libfranka_${version//\./-}_wheels.zip"
            out_full=$(realpath "output/$out")
            echo "Creating $out from all wheels___${version}___*.zip"

            tmp=$(mktemp -d)
            mkdir "$tmp/dist"
            # unpack each matching zip into the temp dir
            for z in artifacts/wheels___${version}___*/*.zip; do
              echo "Unpacking $z"
              tmp2=$(mktemp -d)
              unzip -q "$z" -d "$tmp2"
              mv $tmp2/dist/* "$tmp/dist/"
              rm -rf "$tmp2"
            done

            # re-combine into a single zip
            (
              cd "$tmp"
              zip -qr "$out_full" .
            )

            # clean up
            rm -rf "$tmp"
            echo "$out done."
          done

      - name: Create release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          draft: false
          files: |
            output/libfranka_*_wheels.zip

      - name: Unpack wheels
        run: |
          unzip output/libfranka_0-16-0_wheels.zip

      - name: Publish python package
        uses: pypa/gh-action-pypi-publish@release/v1
